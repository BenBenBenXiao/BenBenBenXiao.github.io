<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>猪窠</title>
  
  <subtitle>雷霆雨露，具是天恩</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-30T07:51:28.016Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>李彦辰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NexT</title>
    <link href="http://yoursite.com/2020/01/30/NexT/"/>
    <id>http://yoursite.com/2020/01/30/NexT/</id>
    <published>2020-01-30T07:30:21.000Z</published>
    <updated>2020-01-30T07:51:28.016Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>NexT是一个比较流行的主题，基于Hexo。由于我现在用的就是NexT，所以做一个简单的介绍。因为官方文档写的已经很明确了，只有一些点是有问题的，所以只需要把官方的坑填上就可以了。更多的美化只要Google就可以了。如果相关的坑还是存在的话，届时再更新相关的问题。</p><a id="more"></a><h1 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h1><p>看<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>的文档就可以了。但是有几个坑还是要强调一下，因为文档就是错的。</p><h2 id="标签的图标"><a href="#标签的图标" class="headerlink" title="标签的图标"></a>标签的图标</h2><p>效果如图</p><p><img src="/2020/01/30/NexT/logo.png" alt="logo"></p><p>menu的设置。<br>所有的方框内都是没有空格的！！！<br>所有的方框内都是没有空格的！！！<br>所有的方框内都是没有空格的！！！<br>这个位置文档错了。</p><p><img src="/2020/01/30/NexT/menu.png" alt="menu"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>文档中我没有提到的内容应该都是没有问题的。祝大家写博客快乐～剩下的美化内容按需自取。</p><p>PS：美化这个东西，从IOS7越狱我就开始弄，Windows到Linux，我感觉用处不大，弄一点就ok了，如果有时间且有兴趣的话还是可以慢慢玩玩的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;NexT是一个比较流行的主题，基于Hexo。由于我现在用的就是NexT，所以做一个简单的介绍。因为官方文档写的已经很明确了，只有一些点是有问题的，所以只需要把官方的坑填上就可以了。更多的美化只要Google就可以了。如果相关的坑还是存在的话，届时再更新相关的问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>用搭建好的环境写第一篇博客</title>
    <link href="http://yoursite.com/2020/01/29/%E7%94%A8%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%9A%84%E7%8E%AF%E5%A2%83%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2020/01/29/%E7%94%A8%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%9A%84%E7%8E%AF%E5%A2%83%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-01-29T10:41:37.000Z</published>
    <updated>2020-01-29T12:10:53.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>博客的基本框架已经完成了，接下来就是一些细节问题了。之所以把这些细节单列出来，是因为官方文档中有一些问题。我已经踩完这些坑了，不希望大家再踩坑。只要按照我写的基本框架来，基本就不会出现问题了。</p><a id="more"></a><h1 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h1><ol><li>把_config.yml里面的post_asset_folder: 设置为true，默认是false，即<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure></li><li>在安装hexo的目录下输入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https:&#x2F;&#x2F;github.com&#x2F;7ym0n&#x2F;hexo-asset-image --save</span><br></pre></td></tr></table></figure>安装github的插件就可以顺利的插入图片了，用markdown语法的相对路径就可以了<h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1>使用命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;博客的名称&quot;</span><br></pre></td></tr></table></figure>这样在_post文件夹下面就会出现一个.md文件和相同名称的文件夹，把想要引用的图片放入文件夹中，用markdown的相应命令”相对路径”引用即可<h1 id="Readmore"><a href="#Readmore" class="headerlink" title="Readmore"></a>Readmore</h1>readmore就是一个简介，即在页面上不会显示出博文的全部，只会显示一个摘要，而且这个摘要还是可以自己设置的，语法如下<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure>以这篇博文为例</li></ol><p><img src="/2020/01/29/%E7%94%A8%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%9A%84%E7%8E%AF%E5%A2%83%E5%86%99%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/readmore.png" alt="readmore"><br>用上面的命令将前言和正文部分分割开</p><h1 id="生成页面和本地测试"><a href="#生成页面和本地测试" class="headerlink" title="生成页面和本地测试"></a>生成页面和本地测试</h1><p>用下面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 生成页面</span><br><span class="line">hexo s # 本地测试</span><br></pre></td></tr></table></figure><p>如果本地测试的页面没有变，用下面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean # 清除缓存</span><br></pre></td></tr></table></figure><h1 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h1><p>用之前提到的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d # 部署到Github</span><br></pre></td></tr></table></figure><p>建议在每次本地测试之前清除缓存，然后在本地测试，测试之后再部署到Github。</p><p>如果不在本地测试的话，可以用下面的命令一步到位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>都设置完之后就可以开始写博客了。只要一步一步弄还是很简单的。接下来就是一些进阶的设置了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;博客的基本框架已经完成了，接下来就是一些细节问题了。之所以把这些细节单列出来，是因为官方文档中有一些问题。我已经踩完这些坑了，不希望大家再踩坑。只要按照我写的基本框架来，基本就不会出现问题了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>利用Github和Hexo搭建博客（Hexo部分）</title>
    <link href="http://yoursite.com/2020/01/25/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%E9%83%A8%E5%88%86%EF%BC%89/"/>
    <id>http://yoursite.com/2020/01/25/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%E9%83%A8%E5%88%86%EF%BC%89/</id>
    <published>2020-01-25T12:48:46.460Z</published>
    <updated>2020-01-29T12:04:14.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>书接上回，Github部分已经设置好了，接下来就是Hexo了。Hexo就是个框架，可以简单理解为是一个软件。之所以用Hexo，是因为Hexo可以把markdown文件直接转换为html，这样网页就直接渲染好了，对于我这种只会markdown的人就很友好了。</p><a id="more"></a><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>Hexo是基于nodejs的，所以我们需要先安装nodejs。由于我是Manjaro Linux，所以用命令行直接安装就ok。Windows和Mac可以参照<a href="http://nodejs.cn/" target="_blank" rel="noopener">node.js中文网</a>看文档安装就好。Mac应该也用命令行安装。</p><p>PS：学开源的内容一定要学会看文档，例如Python。<br>PS：Hexo的文档有一些错误，我会在内容中指出来。如果按照文档做了却没成功，那可能是官方文档出现了问题，再google一下就好了，不要怀疑自己。</p><h1 id="npm更换源"><a href="#npm更换源" class="headerlink" title="npm更换源"></a>npm更换源</h1><p>为什么要更换呢？太慢！所以在国内一定要更换源。更换源可以临时更换或者永久更换。我的建议是永久更换为国内的源，用国内的镜像，安装起来就很快了。</p><h2 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -gd express --registry&#x3D;http:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="永久设置"><a href="#永久设置" class="headerlink" title="永久设置"></a>永久设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>PS：这里有个彩蛋，不知道大家发现没有<br>PSS:这是阿里的源</p><h1 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h1><p>使用npm直接安装。Mac和其他linux发行版需要superuser权限，代码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-client</span><br></pre></td></tr></table></figure><p>如果没更换源，安装速度就很慢。更换之后就稍微快一点。</p><h1 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h1><p>初始化命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>PS：从这里开始运行的所有命令都要在Hexo的目录下，这一点一定要注意。我每次的cd命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;Document&#x2F;blog</span><br></pre></td></tr></table></figure><p>也就是说，我的Hexo在Document文件夹中的blog内</p><h1 id="Hexo测试和部署"><a href="#Hexo测试和部署" class="headerlink" title="Hexo测试和部署"></a>Hexo测试和部署</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>依次输入如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 生成页面</span><br><span class="line">hexo s # 本地预览</span><br></pre></td></tr></table></figure><p>访问Terminal中出现的页面，如果出现Hexo的默认页面，则安装成功，具体的页面如图<br><img src="/2020/01/25/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%E9%83%A8%E5%88%86%EF%BC%89/localhost.jpg" alt="local"><br>PS：这里的页面主题是可以更换的，最常用的主题是NexT，我现在用的也是这个。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>此处需要安装插件 hexo-deployer-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer --save</span><br></pre></td></tr></table></figure><p>然后修改_config.yml文件。这个文件的位置在Hexo安装的目录下。因为我Hexo安装在 ～/Document/blog下，所以_config.yml也在这里。修改文件最后的Deployment部分，修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名&#x2F;用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>保存之后，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d # 部署到Github</span><br></pre></td></tr></table></figure><p>就可以在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;用户名.github.io</span><br></pre></td></tr></table></figure><p>中看到通过Hexo搭建的博客了<br>PS：_config.yml是一个配置文件，是主页的配置。在设置主题之后，还会在主题的文件夹下出现同名文件。那个文件就是配置主题用的了。二者不要弄混。</p><h1 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>Hexo的搭建到现在也已经基本完成了。骨架已经部署好了。也就意味着我们可以开始写博客了。但是，还有一下细节需要处理，而且这些细节往往也是最花时间，官方文档也有错误。所以下面会专门写关于写博客的一些设置。最后还有一个NexT的主题设置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;书接上回，Github部分已经设置好了，接下来就是Hexo了。Hexo就是个框架，可以简单理解为是一个软件。之所以用Hexo，是因为Hexo可以把markdown文件直接转换为html，这样网页就直接渲染好了，对于我这种只会markdown的人就很友好了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Deployment" scheme="http://yoursite.com/tags/Deployment/"/>
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>利用Github和Hexo搭建博客（Github部分）</title>
    <link href="http://yoursite.com/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/"/>
    <id>http://yoursite.com/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/</id>
    <published>2020-01-24T14:07:24.000Z</published>
    <updated>2020-01-29T12:04:06.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Github是个好东西。本质上是一个代码托管平台，里面有private和public两种。只要学会搜索和使用，就会发现很多宝藏。最近刚刚用Github和Hexo搭建好自己的博客，于是就写一个教程。比较简单的就直接省略，因为前人的教程已经很详细了。这里主要记录一下自己踩过的坑。</p><a id="more"></a><h1 id="我的环境"><a href="#我的环境" class="headerlink" title="我的环境"></a>我的环境</h1><p>由于我使用的是Manjaro Linux，所以一切都是基于Manjaro Linux的。Windows和Mac的用户可能不是很适合看这个教程。但是一些基本的过程都是相同的，所以也有一定的借鉴意义。</p><h1 id="注册Github"><a href="#注册Github" class="headerlink" title="注册Github"></a>注册Github</h1><p>在Github的官方网站注册就可以了。而且很多类似的托管都可以，譬如gitee。只要按照要求注册就可以。由于我注册很早，也可能不太适合现在借鉴，所以就不截图了。只要按照注册的要求做就可以了。</p><h1 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a>创建repository</h1><p>创建名字如下的仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名.github.io</span><br></pre></td></tr></table></figure><p>我的用户名是BoogalooLi，所以我要创建的仓库名字为</p><p><a href="https://BoogalooLi.github.io" target="_blank" rel="noopener">BoogalooLi.github.io</a></p><p>这里只要直接点击就会进入我的个人网页。</p><p>PS：这个部分有没有readme都可以，但是最好有readme，这样大家就都知道这个是干什么的了。<br>PSS：readme的文件类型是markdown（md），这就是另一个故事了。</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>安装Git和nodejs。由于Manjaro Linux已经预先装好具体方法一搜一片，而且这篇文章的重点介绍也不在这里，所以这里也省略了。假设我需要安装Git，那么代码如下</p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman install git</span><br></pre></td></tr></table></figure><p>如果使用的是其他linux发行版，只要换一下相应的包管理命令即可。</p><h1 id="Github设置"><a href="#Github设置" class="headerlink" title="Github设置"></a>Github设置</h1><p>这里就比较技术向了。设置github账户和邮箱。</p><p>PS：Windows需要用之前安装好的git bash，mac、linux直接terminal就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p>我的命令如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name BoogalooLi</span><br><span class="line">git config --global user.email fz20111018@gmail.com</span><br></pre></td></tr></table></figure><h1 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h1><p>输入如下命令，回车就ok了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p>我就需要输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C fz20111018@gmail.com</span><br></pre></td></tr></table></figure><p>此时在～（/home/li）中就会出现.ssh文件（这里可能要显示“隐藏文件”，具体问度娘）。</p><p><img src="/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/sshdir.jpg" alt="ssh_dir"></p><p>直接用文本应用打开名字为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id_rsa.pub</span><br></pre></td></tr></table></figure><p>的文件，全选里面的内容，复制到剪切板。</p><p><img src="/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/id.jpg" alt="id"></p><h1 id="在Github中添加密钥"><a href="#在Github中添加密钥" class="headerlink" title="在Github中添加密钥"></a>在Github中添加密钥</h1><p>登录Github，点击自己的头像，选择settings。然后点击左边的SSH and GPG keys点击New SSH key。</p><p><img src="/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/ssh2.jpg" alt="ssh2"><br>接着将之前复制的内容复制进去就可以了。</p><p><img src="/2020/01/24/%E5%88%A9%E7%94%A8Github%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github%E9%83%A8%E5%88%86%EF%BC%89/SSH.jpg" alt="SSH"><br>都弄好之后就像上面的图片一样，会显示出现在的keys。</p><h1 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h1><p>PS:这个地方我踩了坑，以为是和自己的帐号或者邮箱验证，但是实际上适合github验证。输入下面的代码后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>会出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)?</span><br></pre></td></tr></table></figure><p>这个时候一定要输入yes，然后回车就可以了。直到出现<br>successfully的字样就成功了。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这个时候我们的github部分的相关设置就完成了。接下来我会在下一个部分分享Hexo的设置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Github是个好东西。本质上是一个代码托管平台，里面有private和public两种。只要学会搜索和使用，就会发现很多宝藏。最近刚刚用Github和Hexo搭建好自己的博客，于是就写一个教程。比较简单的就直接省略，因为前人的教程已经很详细了。这里主要记录一下自己踩过的坑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
      <category term="Deployment" scheme="http://yoursite.com/tags/Deployment/"/>
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/01/22/hello-world/"/>
    <id>http://yoursite.com/2020/01/22/hello-world/</id>
    <published>2020-01-22T13:17:15.130Z</published>
    <updated>2020-01-23T04:55:17.478Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Deployment" scheme="http://yoursite.com/tags/Deployment/"/>
    
      <category term="Blog" scheme="http://yoursite.com/tags/Blog/"/>
    
  </entry>
  
</feed>
